services:
  api:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - ./src:/usr/src/app/src
    environment:
      - MONGODB_URI=mongodb://mongo:27017/dms_v2?replicaSet=rs0
      - PORT=3000
    networks:
      - dms-network
    depends_on:
      mongo:
        condition: service_healthy
    command: >
      sh -c "npm run dev"

  mongo:
    image: mongo:5.0
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - dms-network
    command: ["--replSet", "rs0", "--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.isMaster().ismaster"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo-setup:
    image: mongo:5.0
    depends_on:
      - mongo
    volumes:
      - ./mongo-init.js:/mongo-init.js
    networks:
      - dms-network
    command: >
      sh -c "
        sleep 10 && mongo --host mongo:27017 --eval \"rs.initiate({_id: 'rs0', members: [{_id: 0, host: 'mongo:27017'}]}\")"

networks:
  dms-network:
    driver: bridge

volumes:
  mongo-data:
